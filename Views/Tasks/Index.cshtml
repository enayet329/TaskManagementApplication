@model TaskManagementApp.Models.TaskListViewModel
@{
    ViewData["Title"] = "My Tasks";
}

<div class="row">
    <div class="col-md-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2><i class="fas fa-tasks me-2"></i>My Tasks</h2>
            <a asp-action="Create" class="btn btn-success btn-lg">
                <i class="fas fa-plus me-2"></i>Add New Task
            </a>
        </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title">Total Tasks</h5>
                                <h2 class="mb-0">@Model.TotalCount</h2>
                            </div>
                            <i class="fas fa-list fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title">Completed</h5>
                                <h2 class="mb-0">@Model.CompletedCount</h2>
                            </div>
                            <i class="fas fa-check-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title">Pending</h5>
                                <h2 class="mb-0">@Model.PendingCount</h2>
                            </div>
                            <i class="fas fa-clock fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filters -->
        <div class="card mb-4">
            <div class="card-body">
                <form method="get">
                    <div class="row g-3 align-items-end">
                        <div class="col-md-4">
                            <label for="statusFilter" class="form-label">Filter by Status</label>
                            <select name="statusFilter" id="statusFilter" class="form-select">
                                <option value="all" selected="@(Model.StatusFilter == "all")">All Tasks</option>
                                <option value="pending" selected="@(Model.StatusFilter == "pending")">Pending</option>
                                <option value="completed" selected="@(Model.StatusFilter == "completed")">Completed</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="sortBy" class="form-label">Sort by</label>
                            <select name="sortBy" id="sortBy" class="form-select">
                                <option value="duedate" selected="@(Model.SortBy == "duedate")">Due Date</option>
                                <option value="title" selected="@(Model.SortBy == "title")">Title</option>
                                <option value="created" selected="@(Model.SortBy == "created")">Created Date</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-filter me-2"></i>Apply Filters
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Tasks List -->
        @if (Model.Tasks.Any())
        {
            <div class="row">
                @foreach (var task in Model.Tasks)
                {
                    <div class="col-md-6 mb-3">
                        <div class="card h-100 @(task.IsCompleted ? "border-success" : "")">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h6 class="mb-0 @(task.IsCompleted ? "text-decoration-line-through text-muted" : "")">
                                    @task.Title
                                </h6>
                                <div class="btn-group" role="group">
                                    <form asp-action="ToggleComplete" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@task.Id" />
                                        <button type="submit" class="btn btn-sm @(task.IsCompleted ? "btn-warning" : "btn-success")"
                                                title="@(task.IsCompleted ? "Mark as Pending" : "Mark as Completed")">
                                            <i class="fas @(task.IsCompleted ? "fa-undo" : "fa-check")"></i>
                                        </button>
                                    </form>
                                    <a asp-action="Edit" asp-route-id="@task.Id" class="btn btn-sm btn-primary" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <form asp-action="Delete" method="post" class="d-inline"
                                          onsubmit="return confirm('Are you sure you want to delete this task?')">
                                        <input type="hidden" name="id" value="@task.Id" />
                                        <button type="submit" class="btn btn-sm btn-danger" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                            <div class="card-body">
                                @if (!string.IsNullOrEmpty(task.Description))
                                {
                                    <p class="card-text @(task.IsCompleted ? "text-muted" : "")">@task.Description</p>
                                }
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        @if (task.DueDate.HasValue)
                                        {
                                            var daysRemaining = (task.DueDate.Value - DateTime.Today).Days;
                                            var dueDateClass = task.IsCompleted ? "text-muted" :
                                            (daysRemaining < 0 ? "text-danger" :
                                            daysRemaining <= 3 ? "text-warning" : "text-info");
                                            <span class="@dueDateClass">
                                                Due: @task.DueDate.Value.ToString("MMM dd, yyyy")
                                                @if (!task.IsCompleted && daysRemaining < 0)
                                                {
                                                    <span class="badge bg-danger ms-1">Overdue</span>
                                                }
                                                else if (!task.IsCompleted && daysRemaining <= 3 && daysRemaining >= 0)
                                                {
                                                    <span class="badge bg-warning ms-1">Due Soon</span>
                                                }
                                            </span>
                                        }
                                        else
                                        {
                                            <span>No due date</span>
                                        }
                                    </small>
                                    @if (task.IsCompleted)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i>Completed
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="fas fa-clock me-1"></i>Pending
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-tasks fa-4x text-muted mb-3"></i>
                <h4 class="text-muted">No tasks found</h4>
                <p class="text-muted">
                    @if (Model.StatusFilter != "all")
                    {
                        <span>No @Model.StatusFilter.ToLower() tasks found. </span>
                    }
                    <a asp-action="Create" class="btn btn-success">Create your first task</a>
                </p>
            </div>
        }
    </div>
</div>
